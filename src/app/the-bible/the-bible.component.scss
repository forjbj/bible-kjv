@import"../../styles.scss";

.gridWrapper {
    // below has to be vh; % doesn't make it sticky at end of scroll
    // every outlet has to height: 100vh (not min-height) or nav doesn't stick at end or scroll
    // overflow scroll absolutely neceesary on elements; overflow hidden must be set on html
    height: 100vh; //absolutely necessarry; took weeks to solve overscrolling problem
    max-width: 100dvw; //can only be % as chrome make a giant mess of it if it is dvw or vw
    display: grid;
    @media (orientation:portrait){
        grid-template-rows: 2.3rem 1fr;
        grid-template-areas: 
            "nav"
            "outlet";
        .portraitNav {
            grid-area: nav;
            position: sticky; //need sticky can't get it work without it
            top: 0;
        }
        .portraitOutlet {
            height: calc(100vh - 2.3rem);
            grid-area: outlet;
            overflow-y: scroll; // necessary to keep nav not scrollable; css grid thing?
        }
    }
    @media (orientation:landscape){
        grid-template-columns: auto auto;
        grid-auto-flow: column; // necessary or creates second row when switching lefthand below
        grid-template-areas: 
            "left right";
        .landscapeNav {
            height: 100vh;
            position: sticky; //need sticky can't get it work without it
            top: 0;
        }
        .landscapeOutlet{
            justify-self: center;
            align-self: center;
            min-width: calc(100dvw - 4.5rem);
            height: 100vh; 
            overflow-y: scroll; // necessary to keep nav not scrollable; css grid thing?
        }
        &[leftHanded = 'yes'] {
            &.landscapeNav {
                grid-area: left;
            }
            &.landscapeOutlet {
                grid-area: right;
            }
        }
        &[leftHanded = 'no'] {
            &.landscapeNav {
                grid-area: right;
            }
            &.landscapeOutlet {
                grid-area: left;
            }
        }
    }
}
// back/chapter button
.middleButton {
    font-family: Bookman, Georgia, serif;
    font-weight: bold;
    font-variant: all-small-caps;            
    color: var(--zInk);
    text-align: center;
    text-shadow: 1px 1px var(--gridColor);
    border-radius: 0.1rem;
    background-color: var(--button);
    padding: 0.2rem;
    cursor: pointer;
    transition: all 0.3s;
    &:hover, &:focus, &:active {
        color: var(--ink);
        background-color: var(--menu);
        outline: 0; //needed for chrome
    }
}
//always display chapter numbers horizontally
.horizontalNumbers {
    writing-mode: horizontal-tb;
    @media (orientation: portrait){
        margin-left: 0.2rem;
    }
}
.backButton {
    color: var(--ink);
}
.menuButton {
    width: 2.2rem;
    background: transparent;
    border: none;
}
.hamburger {
    .line {
        fill: var(--zInk);
        transition: 
            rotate 0.3s,
            y 0.3s 0.3s,
            opacity 0s 0.3s;
         transform-origin: center;
         transform-box: fill-box; //needed for firefox
    }
}
.menuButtonActive {
    .top, .bottom {
        y: 45px; // has to be px or firefox doesn't work
    }
    .middle {
        opacity: 0;
    }
    .top {
        rotate: -45deg;
    }
    .bottom {
        rotate: 45deg;
    }
    .line {
        fill: var(--zInk);
        transition: 
            y 0.3s,
            rotate 0.3s 0.3s,
            opacity 0s 0.3s;
    }   
}

// Fade in menu/chapter-numbers component
.fadeIn {
    animation: fadeIn 0.3s ease-in;
    @keyframes fadeIn {
        0% { opacity: 0; }
        // 100% { opacity: 1; } //NOT THIS AS IT MESSES WITH BACKGROUND OPACITY
    }    
}
.fadeOut {
    animation: fadeOutSearch 0.3s ease-out;
    @keyframes fadeOutSearch {
        0% { opacity: 1; }
        100% { opacity: 0; }
    }
}

@media (orientation: landscape){
    nav {
        z-index: 2; // necessary for the nav's child (menu) to overlay the router-outlet; search is sticky so is this.
        background-color: var(--nav);
        font-family: "Bookman", Georgia, serif;
        color: var(--zInk);
        text-shadow: 1px 1px var(--gridColor);
        height: 100vh;
        width: 3rem;
        &[leftHanded = 'yes'] {
            grid-column: 1;
            border-right: var(--ink) solid 1px;
            justify-self: left;
        }
        &[leftHanded = 'no'] {
            grid-column: 2;
            border-left: var(--ink) solid 1px;
            justify-self: right;
        }
    } 
    .navGrid {
        margin: 0;
        padding: 0;
        display: grid;
        grid-template-columns: 3rem;
        grid-template-rows: 1fr auto 1fr; // needed to centre items
        justify-items: center;
        max-height: 100vh;
        transition: all 0.3s;
        text-orientation: upright; //works here; writing-mode does not
        .desc {
            grid-column: 1;
            grid-row: 1;
            margin: 0.3rem;
            writing-mode: vertical-lr; //not in 'navGrid' or does weird things
            white-space: normal;
            font-variant: all-small-caps;            
        } 
        .middleButton {
            width: 2rem; // is necessary for iOS
            padding: 0;  
        }
        .titleButton {  
            justify-content: center; //absolutely necessary
            grid-column: 1;
            grid-row: 2;
            min-height: 7rem;
            margin: 0.5rem auto;
            writing-mode: vertical-lr; //not in 'navGrid' or does weird things
            font-variant: all-small-caps; // necessary for alignment
            line-height: 1.8rem; //necessary for centreing vertical text;            
        }
        .menuButton {
            grid-column: 1;
            grid-row: 3;
            margin: 1rem 0;
            align-self: end;
        }
    }
    .desc {
        white-space: nowrap;
        font-variant: small-caps;
        font-size: 0.9rem;
    }
}
@media (orientation: portrait){
    nav {
        background-color: var(--nav);
        border-bottom: var(--ink) solid 1px;
        font-family: "Bookman", Georgia, serif;
        color: var(--zInk);
        text-shadow: 1px 1px var(--gridColor);
        height: 2.2rem;
    } 
    .navGrid {
        margin: 0;
        padding: 0;
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        grid-template-rows: 2.2rem; // needed to centre items
        align-items: center;
        max-width: 100%;
        transition: all 0.3s;
        margin: 0;
        #description {
            grid-column: 1;
            grid-row: 1;
            margin: 0 1rem;
            font-variant: small-caps;
            justify-self: left;
            font-size: 0.9rem;
            @media (max-width: 425px) {
                margin: 0 0.3rem;
            }
        } 
        .titleButton {
            grid-column: 2;
            grid-row: 1;
            justify-self: center;
            text-align: center;
            font-variant: small-caps;
            padding: 0 0.3rem;
        }
        .menuButton {
            grid-column: 3;
            grid-row: 1;
            margin: 0 1rem;
            justify-self: right;
        }

        &[leftHanded = 'yes'] {
            #description {
                grid-column: 3;
                grid-row: 1;
                justify-self: right;
            }
            .menuButton {
                grid-column: 1;
                grid-row: 1;
                justify-self: left;
            }
            .titleButton {
                grid-column: 2;
                grid-row: 1;
                justify-self: center;
            }
        }
    }
    .desc {
        white-space: nowrap;
    }
}
